#!/usr/bin/env ruby
module TrafficGenerator
  class << self
    def generate_traffic(env)
      @environment = env
      SITES.each do |site_key, site|
        puts "#{base_url site_key}"
        LANDERS.fetch(site_key).values.each do |lander|
          url = "http://#{base_url site_key}/#{lander}/"
          print "  #{lander}..."
          command = "/usr/sbin/ab -n25 -c25 #{url} > /dev/null"
          `#{command}`
          puts 'done'
        end
      end
    end

    private

    attr_reader :environment

    def base_url(site)
      site = SITES[site]
      case environment.downcase.to_sym
      when :development
        return "#{site}.dev:3000"
      when :qa
        return "qa.#{site}"
      when :staging
        return "staging.#{site}"
      when :production
        return "#{site}"
      end
      raise StandardError.new("Unknown environment #{environment}")
    end

    LANDERS = {
      lowfares: {
        flights: 'airfare',
        hotels: 'hotels',
        cars: 'rentalcars',
        vacations: 'vacations',
        deals: 'deals'
      },
      farespotter: {
        flights: 'flights',
        hotels: 'hotels',
        cars: 'cars',
        vacations: 'vacations',
        cruises: 'cruises'
      },
      meta: {
        flights: 'flights'
      }
    }
  end

  SITES = {
    meta: 'planmytrip.com',
    lowfares: 'lowfares.com',
    farespotter: 'farespotter.net'
  }
end

allowed = %i(development qa staging production)
if ARGV[0] && allowed.include?(ARGV[0].to_sym)
  environment = ARGV[0].to_sym
  TrafficGenerator.generate_traffic(environment)
  exit 0
else
  puts "#{File.basename(__FILE__)} <development|qa|staging|production>"
  exit 1
end

